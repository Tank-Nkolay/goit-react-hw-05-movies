{"version":3,"file":"static/js/342.a4fa77e0.chunk.js","mappings":"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","sources":["api/movieApi.js","components/ListFilms/ListFilms.styled.jsx","components/ListFilms/ListFilms.js","components/Loader/Loader.styled.jsx","components/Loader/Loader.js","pages/Movies/Movies.styled.jsx","components/Searchbar/SearchBar.styled.jsx","components/Searchbar/SearchBar.js","pages/Movies/Movies.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst paramsTraiding = 'trending/movie/day?';\nconst SEARCH_URL = 'search/movie?';\n\nconst API_KEY = 'api_key=ca2a773c1a5457f1c3e0c6f68586d44e';\nconst lang = 'language=en-US';\n\nexport async function fetchTraidingFilms() {\n  const { data } = await axios.get(`/${paramsTraiding}${API_KEY}`);\n\n  return data;\n}\n\nexport async function fetchFilmsById(id) {\n  const { data } = await axios.get(`/movie/${id}?${lang}&${API_KEY}`);\n\n  return data;\n}\n\nexport async function fetchSearchFilms(query) {\n  const { data } = await axios.get(`/${SEARCH_URL}&query=${query}&${API_KEY}`);\n\n  return data;\n}\n\nexport async function fetchFilmsCast(id) {\n  const { data } = await axios.get(`/movie/${id}/credits?${lang}&${API_KEY}`);\n\n  return data;\n}\n\nexport async function fetchFilmsReview(id) {\n  const { data } = await axios.get(`/movie/${id}/reviews?${lang}&${API_KEY}`);\n\n  return data;\n}\n","import styled from '@emotion/styled';\n\nexport const MovieList = styled.ul`\n  display: flex;\n  gap: 30px;\n  flex-wrap: wrap;\n  justify-content: center;\n  max-width: calc(100vw - 48px);\n\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 20px;\n`;\n\nexport const FilmCard = styled.div`\n  width: 280px;\n  // height: 438px;\n  padding-bottom: 20px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  border-radius: 4px;\n  box-shadow: 0px 4px 4px 0px #00000040;\n\n  &:hover,\n  &:focus {\n    box-shadow: 0px 4px 4px 0px #00000040;\n    transition: 0.5s ease all;\n    transform: scale(1.1);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 336px;\n  }\n  @media screen and (min-width: 1280px) {\n    max-width: 395px;\n  }\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  border-radius: 5px;\n  margin-bottom: 8px;\n`;\n\nexport const MovieTitle = styled.h2`\n  font-weight: 20px;\n  line-height: 1.17;\n  text-transform: uppercase;\n  color: #000000;\n\n  @media screen and (min-width: 768px) {\n    line-height: 1.3;\n  }\n  @media screen and (min-width: 1280px) {\n    line-height: 1.2;\n    font-size: 20px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { FilmCard, Img, MovieList, MovieTitle } from './ListFilms.styled';\n\nimport images from '../../images/images.jpg';\nimport { routes } from 'routes';\n\nexport default function ListFilms({ films }) {\n  const location = useLocation();\n  const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\n  return (\n    <MovieList>\n      {films &&\n        films.map(({ poster_path, title, id }) => (\n          <Link\n            key={id}\n            to={`/${routes.MOVIES}/${id}`}\n            state={{ from: location }}\n          >\n            <FilmCard>\n              {poster_path ? (\n                <Img src={IMG_URL + poster_path} alt={title} />\n              ) : (\n                <Img src={images} alt={title} />\n              )}\n\n              <MovieTitle> {title}</MovieTitle>\n            </FilmCard>\n          </Link>\n        ))}\n    </MovieList>\n  );\n}\n\nListFilms.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    })\n  ),\n};\n","import styled from '@emotion/styled';\n\nexport const LoaderWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import { FallingLines } from 'react-loader-spinner';\nimport { LoaderWrapper } from './Loader.styled';\n\nexport default function Loader() {\n  return (\n    <LoaderWrapper>\n      <FallingLines\n        color=\"red\"\n        width=\"100\"\n        visible={true}\n        ariaLabel=\"falling-lines-loading\"\n      />\n    </LoaderWrapper>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const MainSection = styled.div`\n  padding-top: 20px;\n  padding-bottom: 40px;\n`;\n","import styled from '@emotion/styled';\n\nimport { Form, Field } from 'formik';\n\nexport const Search = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-bottom: 30px;\n  flex-direction: column;\n`;\n\nexport const FormEl = styled(Form)`\n  position: relative;\n  width: 200px;\n  align-self: center;\n`;\n\nexport const Input = styled(Field)`\n  width: 100%;\n  height: 20px;\n  outline: none;\n  color: black;\n\n  border: none;\n  border-radius: 4px;\n\n  background-color: lightskyblue;\n  border-bottom: 0.5px solid #f7f7f7;\n\n  &::placeholder {\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 1.4;\n    display: flex;\n    align-items: center;\n\n    color: black;\n  }\n`;\n\nexport const BtnSearch = styled.button`\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  position: absolute;\n  top: 0;\n  right: 0;\n`;\n","import PropTypes from 'prop-types';\nimport { Suspense } from 'react';\nimport React from 'react';\nimport { Formik } from 'formik';\nimport { AiOutlineSearch } from 'react-icons/ai';\nimport { Search, FormEl, Input, BtnSearch } from './SearchBar.styled';\nimport { Outlet } from 'react-router-dom';\nimport Loader from 'components/Loader';\nimport { useSearchParams } from 'react-router-dom';\n\nexport default function SearchBar({ onSubmit }) {\n  const [searchParams] = useSearchParams();\n\n  const handleSubmit = async (values, actions) => {\n    await onSubmit(values);\n\n    actions.setSubmitting(false);\n  };\n  return (\n    <Search as=\"main\">\n      <Formik\n        initialValues={{ query: searchParams.get('query') || '' }}\n        onSubmit={handleSubmit}\n      >\n        {({ isSubmitting }) => (\n          <FormEl>\n            <BtnSearch type=\"submit\" disabled={isSubmitting}>\n              <AiOutlineSearch size={20} />\n            </BtnSearch>\n\n            <Input\n              name=\"query\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoFocus\n              placeholder=\"Search movies\"\n            />\n          </FormEl>\n        )}\n      </Formik>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </Search>\n  );\n}\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { MainSection } from './Movies.styled';\nimport SearchBar from 'components/Searchbar/SearchBar';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport toast, { Toaster } from 'react-hot-toast';\nimport Loader from 'components/Loader';\nimport { fetchSearchFilms } from '../../api/movieApi';\nimport ListFilms from 'components/ListFilms/ListFilms';\n\nexport default function Movies() {\n  const [searchMovies, setSearchMovies] = useState([]);\n  const [query, setQuery] = useState('');\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const searchQuery = searchParams.get('query') ?? '';\n\n    if (!searchQuery) {\n      return;\n    }\n\n    async function fetchImg(query) {\n      try {\n        setIsLoading(true);\n\n        const response = await fetchSearchFilms(query);\n        const films = response.results;\n        const total = response.total_results;\n\n        if (total === 0) {\n          toast.error(\n            'Sorry, there are no movies matching your query. Please try again.'\n          );\n          return;\n        }\n\n        setSearchMovies(films);\n      } catch {\n        setError('Can`t load movies!');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    fetchImg(searchQuery);\n  }, [searchParams]);\n\n  useEffect(() => {\n    if (error !== false) {\n      toast.error(error);\n    }\n  }, [error]);\n\n  const handlerFormSubmit = values => {\n    if (query !== values.query.trim()) {\n      setSearchMovies([]);\n      setQuery(values.query.trim());\n      setError(false);\n      setIsLoading(false);\n      setSearchParams({ query: values.query });\n    }\n  };\n\n  return (\n    <MainSection>\n      <SearchBar onSubmit={handlerFormSubmit} />\n      {isLoading && <Loader />}\n\n      <ListFilms films={searchMovies} />\n      <Toaster />\n    </MainSection>\n  );\n}\n"],"names":["axios","paramsTraiding","SEARCH_URL","API_KEY","lang","fetchTraidingFilms","data","fetchFilmsById","id","fetchSearchFilms","query","fetchFilmsCast","fetchFilmsReview","MovieList","styled","FilmCard","Img","MovieTitle","ListFilms","films","location","useLocation","map","poster_path","title","to","routes","state","from","src","alt","images","LoaderWrapper","Loader","color","width","visible","ariaLabel","MainSection","Search","FormEl","Form","Input","Field","BtnSearch","SearchBar","onSubmit","useSearchParams","searchParams","handleSubmit","values","actions","setSubmitting","as","initialValues","get","isSubmitting","type","disabled","size","name","autoComplete","autoFocus","placeholder","Suspense","fallback","Movies","useState","searchMovies","setSearchMovies","setQuery","error","setError","isLoading","setIsLoading","setSearchParams","useEffect","searchQuery","response","results","total_results","toast","fetchImg","trim"],"sourceRoot":""}