{"version":3,"file":"static/js/966.86f3c926.chunk.js","mappings":"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","sources":["api/movieApi.js","components/Loader/Loader.styled.jsx","components/Loader/Loader.js","hooks/useTrendingFilms.jsx","hooks/useMovieDetails.jsx","components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.js","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst paramsTraiding = 'trending/movie/day?';\nconst SEARCH_URL = 'search/movie?';\n\nconst API_KEY = 'api_key=ca2a773c1a5457f1c3e0c6f68586d44e';\nconst lang = 'language=en-US';\n\nexport async function fetchTraidingFilms() {\n  const { data } = await axios.get(`/${paramsTraiding}${API_KEY}`);\n\n  return data;\n}\n\nexport async function fetchFilmsById(id) {\n  const { data } = await axios.get(`/movie/${id}?${lang}&${API_KEY}`);\n\n  return data;\n}\n\nexport async function fetchSearchFilms(query) {\n  const { data } = await axios.get(`/${SEARCH_URL}&query=${query}&${API_KEY}`);\n\n  return data;\n}\n\nexport async function fetchFilmsCast(id) {\n  const { data } = await axios.get(`/movie/${id}/credits?${lang}&${API_KEY}`);\n\n  return data;\n}\n\nexport async function fetchFilmsReview(id) {\n  const { data } = await axios.get(`/movie/${id}/reviews?${lang}&${API_KEY}`);\n\n  return data;\n}\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 10%;\n`;\n","import { ThreeDots } from 'react-loader-spinner';\nimport { Container } from './Loader.styled';\n\nexport default function Loader() {\n  return (\n    <Container>\n      <ThreeDots\n        height=\"200\"\n        width=\"200\"\n        radius=\"9\"\n        color=\"#386bd1\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </Container>\n  );\n}\n","import { fetchTraidingFilms } from '../api/movieApi';\nimport { useEffect, useState } from 'react';\nimport toast from 'react-hot-toast';\n\nexport const useTrendingFilms = () => {\n  const [trendingFilms, setTrendingFilms] = useState([]);\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function fetchMovie() {\n      try {\n        setIsLoading(true);\n        const response = await fetchTraidingFilms();\n        const films = response.results;\n        setTrendingFilms(films);\n      } catch {\n        setError('Can`t load movies!');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    fetchMovie();\n  }, []);\n\n  useEffect(() => {\n    if (error !== false) {\n      toast.error(error);\n    }\n  }, [error]);\n\n  return { trendingFilms, isLoading };\n};\n","import { useEffect, useState } from 'react';\nimport toast from 'react-hot-toast';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport * as SERVICE from '../api/movieApi';\nimport { routes } from 'routes';\n\nexport const useMovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    async function fetchMovieID(movieId) {\n      try {\n        setIsLoading(true);\n        const response = await SERVICE.fetchFilmsById(movieId);\n        setMovie(response);\n      } catch {\n        setError('Can`t load movies!');\n        navigate(routes.HOME, { replace: true });\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    fetchMovieID(movieId);\n  }, [movieId, navigate]);\n\n  useEffect(() => {\n    if (error !== false) {\n      toast.error(error);\n    }\n  }, [error]);\n\n  return { movie, isLoading };\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const LinkStyled = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n  margin-left: 24px;\n  color: #6a97f1;\n\n  :hover {\n    color: #0e0f69;\n  }\n`;\n\n// ==============\n// ==============\n","import PropTypes from 'prop-types';\nimport { FaArrowCircleLeft } from 'react-icons/fa';\nimport { LinkStyled } from './BackLink.styled';\n\nexport default function BackLink({ to, children }) {\n  return (\n    <LinkStyled to={to}>\n      <FaArrowCircleLeft size=\"36\" />\n      {children}\n    </LinkStyled>\n  );\n}\n\nBackLink.propTypes = {\n  to: PropTypes.PropTypes.object.isRequired,\n  children: PropTypes.node,\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const FilmCard = styled.main`\n  padding-bottom: 20px;\n  width: 100%;\n  border-radius: 4px;\n  box-shadow: 0px 4px 4px 0px #00000040;\n  @media screen and (min-width: 450px) {\n    display: flex;\n  }\n`;\n\nexport const Img = styled.img`\n  width: 200px;\n  padding-left: 20px;\n  padding-top: 20px;\n\n  border-radius: 5px;\n  margin-right: 20px;\n`;\n\nexport const MovieTitle = styled.h2`\n  display: flex;\n  justify-content: center;\n  font-size: 30px;\n  font-weight: 700;\n  line-height: 1.17;\n  text-transform: uppercase;\n  color: #000000;\n  padding-top: 20px;\n  margin-bottom: 20px;\n`;\n\nexport const OverTitle = styled.p`\n  font-size: 20px;\n  font-weight: 700;\n  margin-bottom: 10px;\n`;\n\nexport const Overview = styled.p`\n  font-size: 16px;\n  line-height: 1.17;\n  color: #000000;\n  margin-bottom: 10px;\n  width: 80%;\n`;\n\nexport const VoteTitle = styled.p`\n  font-size: 20px;\n  font-weight: 700;\n  margin-bottom: 10px;\n`;\n\nexport const Vote = styled.p`\n  font-size: 16px;\n  line-height: 1.17;\n  color: #000000;\n  margin-bottom: 10px;\n`;\n\nexport const GenresTitle = styled.p`\n  font-size: 20px;\n  font-weight: 700;\n  margin-bottom: 10px;\n`;\n\nexport const Genres = styled.p`\n  font-size: 16px;\n  line-height: 1.17;\n  color: #000000;\n  margin-bottom: 10px;\n`;\n\nexport const AddTitle = styled.h3`\n  display: flex;\n  justify-content: flex-start;\n  font-size: 20px;\n  font-weight: 700;\n  line-height: 1.17;\n  text-transform: uppercase;\n  color: #000000;\n  padding-top: 20px;\n  padding-left: 20px;\n  margin-bottom: 10px;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  font-size: 20px;\n  font-weight: 700;\n  margin-bottom: 10px;\n  padding-left: 20px;\n  display: inline;\n`;\n\nexport const AddWrapper = styled.div`\n  margin-bottom: 60px;\n`;\n","import { Suspense } from 'react';\nimport { Outlet, useLocation } from 'react-router-dom';\nimport { Toaster } from 'react-hot-toast';\nimport PropTypes from 'prop-types';\nimport { useMovieDetails } from 'hooks';\nimport Loader from '../../components/Loader/Loader';\nimport BackLink from 'components/BackLink/BackLink';\nimport images from '../../images/noPicture.png';\nimport {\n  AddTitle,\n  FilmCard,\n  Genres,\n  GenresTitle,\n  Img,\n  MovieTitle,\n  OverTitle,\n  Overview,\n  StyledLink,\n  Vote,\n  VoteTitle,\n  AddWrapper,\n} from './MovieDetails.styled';\n\nexport default function MovieDetails() {\n  const location = useLocation();\n  const { movie, isLoading } = useMovieDetails();\n\n  const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n  const backLink = location?.state?.from ?? '/';\n  const { poster_path, title, vote_average, overview, genres } = movie;\n\n  return (\n    <>\n      <BackLink to={backLink}>Back</BackLink>\n\n      {isLoading && <Loader />}\n\n      <FilmCard>\n        {movie.poster_path ? (\n          <Img src={IMG_URL + poster_path} alt={title} />\n        ) : (\n          <Img src={images} alt={title} />\n        )}\n\n        <div>\n          <MovieTitle>{title}</MovieTitle>\n          <OverTitle>Overview:</OverTitle>\n          <Overview>{overview}</Overview>\n          <VoteTitle>User Score:</VoteTitle>\n          <Vote>{Math.round(vote_average * 10)}%</Vote>\n          <GenresTitle>Genres:</GenresTitle>\n\n          <Genres>\n            {genres && genres.map(genre => genre.name).join(', ')}\n          </Genres>\n        </div>\n      </FilmCard>\n\n      <AddWrapper>\n        <AddTitle>Additional information</AddTitle>\n\n        <StyledLink to={'cast'} state={{ from: location?.state?.from }}>\n          Cast\n        </StyledLink>\n\n        <StyledLink to={'reviews'} state={{ from: location?.state?.from }}>\n          Reviews\n        </StyledLink>\n        <Suspense fallback={<></>}>\n          <Outlet />\n        </Suspense>\n        <Toaster />\n      </AddWrapper>\n    </>\n  );\n}\n\nMovieDetails.propTypes = {\n  movie: PropTypes.arrayOf(\n    PropTypes.shape({\n      poster_path: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      vote_average: PropTypes.number.isRequired,\n      overview: PropTypes.string.isRequired,\n      genres: PropTypes.arrayOf(\n        PropTypes.shape({ genre: PropTypes.string.isRequired })\n      ),\n    })\n  ),\n};\n"],"names":["axios","paramsTraiding","SEARCH_URL","API_KEY","lang","fetchTraidingFilms","data","fetchFilmsById","id","fetchSearchFilms","query","fetchFilmsCast","fetchFilmsReview","Container","styled","Loader","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","useTrendingFilms","useState","trendingFilms","setTrendingFilms","error","setError","isLoading","setIsLoading","useEffect","response","films","results","fetchMovie","toast","useMovieDetails","movieId","useParams","movie","setMovie","navigate","useNavigate","SERVICE","routes","replace","fetchMovieID","LinkStyled","Link","BackLink","to","children","size","FilmCard","Img","MovieTitle","OverTitle","Overview","VoteTitle","Vote","GenresTitle","Genres","AddTitle","StyledLink","NavLink","AddWrapper","MovieDetails","location","useLocation","backLink","state","from","poster_path","title","vote_average","overview","genres","src","alt","images","Math","round","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}