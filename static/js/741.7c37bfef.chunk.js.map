{"version":3,"file":"static/js/741.7c37bfef.chunk.js","mappings":"mTAEAA,EAAAA,GAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAiB,sBACjBC,EAAa,gBAEbC,EAAU,2CACVC,EAAO,iBAEN,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACkBL,EAAAA,GAAAA,IAAA,WAAcC,GAAd,OAA+BE,IADjD,uBACGG,EADH,EACGA,KADH,kBAGEA,GAHF,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,yFACkBR,EAAAA,GAAAA,IAAA,iBAAoBQ,EAApB,YAA0BJ,EAA1B,YAAkCD,IADpD,uBACGG,EADH,EACGA,KADH,kBAGEA,GAHF,kEAMA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,yFACkBV,EAAAA,GAAAA,IAAA,WAAcE,EAAd,kBAAkCQ,EAAlC,YAA2CP,IAD7D,uBACGG,EADH,EACGA,KADH,kBAGEA,GAHF,kEAMA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA8BH,GAA9B,yFACkBR,EAAAA,GAAAA,IAAA,iBAAoBQ,EAApB,oBAAkCJ,EAAlC,YAA0CD,IAD5D,uBACGG,EADH,EACGA,KADH,kBAGEA,GAHF,kEAMA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAgCJ,GAAhC,yFACkBR,EAAAA,GAAAA,IAAA,iBAAoBQ,EAApB,oBAAkCJ,EAAlC,YAA0CD,IAD5D,uBACGG,EADH,EACGA,KADH,kBAGEA,GAHF,kE,gFC/BMO,E,QAAgBC,EAAAA,IAAH,sE,SCCX,SAASC,IACtB,OACE,SAACF,EAAD,WACE,SAAC,KAAD,CACEG,MAAM,MACNC,MAAM,MACNC,SAAS,EACTC,UAAU,2BAIjB,C,6LCZYC,EAAaN,EAAAA,EAAAA,IAAH,uKASVO,EAAUP,EAAAA,EAAAA,IAAH,oEAKPQ,EAAcR,EAAAA,EAAAA,EAAH,qIAQXS,EAAaT,EAAAA,EAAAA,EAAH,kIAQVU,EAAUV,EAAAA,EAAAA,EAAH,6G,SCjBL,SAASW,EAAQjB,GAC9B,IAAQkB,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KA4BA,OA1BAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,WAAiCT,GAAjC,yFAEIQ,GAAa,GAFjB,UAG2BtB,EAAAA,EAAAA,IAAiBc,GAH5C,UAGUU,EAHV,OAK8B,KADpBC,EAAaD,EAASE,SACbC,OALnB,uBAMMC,EAAAA,EAAAA,IAAM,4CANZ,0BASIV,EAAWO,GATf,kDAWIL,EAAS,sBAXb,yBAaIE,GAAa,GAbjB,6EADc,yBAAC,SAAD,2BAiBdO,CAAkBf,EACnB,GAAE,CAACA,KAEJS,EAAAA,EAAAA,YAAU,YACM,IAAVJ,GACFS,EAAAA,GAAAA,MAAYT,EAEf,GAAE,CAACA,IAECF,GAKH,gCACGI,IAAa,SAAClB,EAAA,EAAD,IACbc,EAAQa,KAAI,YAA8B,IAA3BlC,EAA0B,EAA1BA,GAAImC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,UAACxB,EAAD,YACE,UAACC,EAAD,YACE,SAACC,EAAD,uBACA,SAACC,EAAD,UAAaoB,QAEf,SAACnB,EAAD,UAAUoB,MALKpC,EAQpB,KAED,SAAC,KAAD,KACA,SAAC,EAAAqC,SAAD,WACE,SAAC,KAAD,SApBG,IAwBV,C","sources":["api/movieApi.js","components/Loader/Loader.styled.jsx","components/Loader/Loader.js","pages/Reviews/Reviews.styled.jsx","pages/Reviews/Reviews.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst paramsTraiding = 'trending/movie/day?';\nconst SEARCH_URL = 'search/movie?';\n\nconst API_KEY = 'api_key=ca2a773c1a5457f1c3e0c6f68586d44e';\nconst lang = 'language=en-US';\n\nexport async function fetchTraidingFilms() {\n  const { data } = await axios.get(`/${paramsTraiding}${API_KEY}`);\n\n  return data;\n}\n\nexport async function fetchFilmsById(id) {\n  const { data } = await axios.get(`/movie/${id}?${lang}&${API_KEY}`);\n\n  return data;\n}\n\nexport async function fetchSearchFilms(query) {\n  const { data } = await axios.get(`/${SEARCH_URL}&query=${query}&${API_KEY}`);\n\n  return data;\n}\n\nexport async function fetchFilmsCast(id) {\n  const { data } = await axios.get(`/movie/${id}/credits?${lang}&${API_KEY}`);\n\n  return data;\n}\n\nexport async function fetchFilmsReview(id) {\n  const { data } = await axios.get(`/movie/${id}/reviews?${lang}&${API_KEY}`);\n\n  return data;\n}\n","import styled from '@emotion/styled';\n\nexport const LoaderWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import { FallingLines } from 'react-loader-spinner';\nimport { LoaderWrapper } from './Loader.styled';\n\nexport default function Loader() {\n  return (\n    <LoaderWrapper>\n      <FallingLines\n        color=\"red\"\n        width=\"100\"\n        visible={true}\n        ariaLabel=\"falling-lines-loading\"\n      />\n    </LoaderWrapper>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const ReviewInfo = styled.div`\n  padding: 20px;\n  display: flex;\n  flex-wrap: wrap;\n  /* width: 100%; */\n  border-radius: 4px;\n  box-shadow: 0px 4px 4px 0px #00000040;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: baseline;\n`;\n\nexport const AuthorTitle = styled.p`\n  font-size: 16px;\n  font-weight: 700;\n  margin-bottom: 10px;\n  padding-top: 5px;\n  padding-right: 5px;\n`;\n\nexport const AuthorName = styled.p`\n  font-size: 16px;\n  font-weight: 600;\n  line-height: 1.17;\n  color: #000000;\n  margin-bottom: 10px;\n`;\n\nexport const Content = styled.p`\n  font-size: 16px;\n  line-height: 1.17;\n  color: #000000;\n  margin-bottom: 10px;\n`;\n","import PropTypes from 'prop-types';\nimport { Suspense } from 'react';\nimport { useState, useEffect } from 'react';\nimport { Outlet, useParams } from 'react-router-dom';\nimport { fetchFilmsReview } from '../../api/movieApi';\nimport Loader from '../../components/Loader/Loader';\nimport toast, { Toaster } from 'react-hot-toast';\nimport {\n  ReviewInfo,\n  Wrapper,\n  AuthorName,\n  AuthorTitle,\n  Content,\n} from './Reviews.styled';\n\nexport default function Reviews(id) {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function fetchMovieReviews(movieId) {\n      try {\n        setIsLoading(true);\n        const response = await fetchFilmsReview(movieId);\n        const reviewList = response.results;\n        if (reviewList.length === 0) {\n          toast('We don`t have any reviews for this movie');\n          return;\n        }\n        setReviews(reviewList);\n      } catch {\n        setError('Can`t load movies!');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchMovieReviews(movieId);\n  }, [movieId]);\n\n  useEffect(() => {\n    if (error !== false) {\n      toast.error(error);\n    }\n  }, [error]);\n\n  if (!reviews) {\n    return null;\n  }\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {reviews.map(({ id, author, content }) => {\n        return (\n          <ReviewInfo key={id}>\n            <Wrapper>\n              <AuthorTitle>Author:</AuthorTitle>\n              <AuthorName>{author}</AuthorName>\n            </Wrapper>\n            <Content>{content}</Content>\n          </ReviewInfo>\n        );\n      })}\n\n      <Toaster />\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n\nReviews.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    })\n  ),\n};\n"],"names":["axios","paramsTraiding","SEARCH_URL","API_KEY","lang","fetchTraidingFilms","data","fetchFilmsById","id","fetchSearchFilms","query","fetchFilmsCast","fetchFilmsReview","LoaderWrapper","styled","Loader","color","width","visible","ariaLabel","ReviewInfo","Wrapper","AuthorTitle","AuthorName","Content","Reviews","movieId","useParams","useState","reviews","setReviews","error","setError","isLoading","setIsLoading","useEffect","response","reviewList","results","length","toast","fetchMovieReviews","map","author","content","Suspense"],"sourceRoot":""}